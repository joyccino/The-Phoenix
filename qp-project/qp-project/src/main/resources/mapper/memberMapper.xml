<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.phoenix.qpproject.mapper.MemberMapper">
    <select id="login" parameterType="com.phoenix.qpproject.dto.MembersDTO" resultType="com.phoenix.qpproject.dto.MembersDTO">
        SELECT
        m.id
        ,m.userId		AS memberId
        ,m.Email        AS memberEmail
        ,m.Surname		AS memberSurname
        ,m.Firstname	AS memberFirstname
        ,m.BirthDate	AS memberBDate
        ,m.RegisterDate	AS memberRegDate
        ,m.RecentVisit	AS memberVisit
        ,m.Gender	    AS memberGender
        ,m.MemberTypeId	AS memberMemberTypeId
        ,m.InstitutionId AS memberInstitutionId
        ,m.MembershipExpirationDate	AS memberMembershipDate
        ,m.Country	    AS memberCountry
        ,m.City	        AS memberCity
        ,m.MajorId	    AS memberMajorId
        ,m.Grade	    AS memberGrade
        ,m.Password	    AS memberPw
        ,m.isReported   AS memberIsReported
        ,m.isBlocked    AS memberIsBlocked
        ,m.isRemoved    AS memberIsRemoved
        ,m.reportedDateTime  AS memberIsReportedDateTime
        ,m.blockedDateTime  AS memberIsBlockedDateTime
        ,m.removedDateTime  AS memberIsRemovedDateTime
        ,m.reportedMemberId AS memberReportedMemberId
        ,m.uuid AS memberUUId
        FROM members AS m
        WHERE userId = #{memberId} AND Password = #{memberPw};
    </select>
    <select id="getMemberList" resultType="com.phoenix.qpproject.dto.MembersDTO">
        SELECT
            m.id
            ,m.userId		AS memberId
            ,m.Email        AS memberEmail
            ,m.Surname		AS memberSurname
            ,m.Firstname		AS memberFirstname
            ,m.BirthDate	AS memberBDate
            ,m.RegisterDate	AS memberRegDate
            ,m.RecentVisit	AS memberVisit
            ,m.Gender	    AS memberGender
            ,m.MemberTypeId	AS memberMemberTypeId
            ,m.InstitutionId AS memberInstitutionId
            ,m.MembershipExpirationDate	AS memberMembershipDate
            ,m.Country	    AS memberCountry
            ,m.City	        AS memberCity
            ,m.MajorId	    AS memberMajorId
            ,m.Grade	    AS memberGrade
            ,m.Password	    AS memberPw
        ,m.isReported   AS memberIsReported
        ,m.isBlocked    AS memberIsBlocked
        ,m.isRemoved    AS memberIsRemoved
        ,m.reportedDateTime  AS memberIsReportedDateTime
        ,m.blockedDateTime  AS memberIsBlockedDateTime
        ,m.removedDateTime  AS memberIsRemovedDateTime
        ,m.reportedMemberId AS memberReportedMemberId
        ,m.uuid AS memberUUId
        FROM
            members AS m;
    </select>

    <select id="getUserAccount" parameterType="java.lang.String" resultType="com.phoenix.qpproject.dto.MembersDTO">
        SELECT
        m.id
        ,m.userId		AS memberId
        ,m.Email        AS memberEmail
        ,m.Surname		AS memberSurname
        ,m.Firstname		AS memberFirstname
        ,m.BirthDate	AS memberBDate
        ,m.RegisterDate	AS memberRegDate
        ,m.RecentVisit	AS memberVisit
        ,m.Gender	    AS memberGender
        ,m.MemberTypeId	AS memberMemberTypeId
        ,m.InstitutionId AS memberInstitutionId
        ,m.MembershipExpirationDate	AS memberMembershipDate
        ,m.Country	    AS memberCountry
        ,m.City	        AS memberCity
        ,m.MajorId	    AS memberMajorId
        ,m.Grade	    AS memberGrade
        ,m.Password	    AS memberPw
        ,m.isReported   AS memberIsReported
        ,m.isBlocked    AS memberIsBlocked
        ,m.isRemoved    AS memberIsRemoved
        ,m.reportedDateTime  AS memberIsReportedDateTime
        ,m.blockedDateTime  AS memberIsBlockedDateTime
        ,m.removedDateTime  AS memberIsRemovedDateTime
        ,m.reportedMemberId AS memberReportedMemberId
        ,m.uuid AS memberUUId
        FROM
        members AS m
        WHERE userId = #{memberId};
    </select>

    <select id="checkMemberById" parameterType="java.lang.String" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM members WHERE UserId = #{memberId};
    </select>

    <select id="checkMemberByEmail"  parameterType="java.lang.String" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM members WHERE Email = #{memberEmail};
    </select>

    <select id="checkMemberByUUId"  parameterType="java.lang.String" resultType="com.phoenix.qpproject.dto.MembersDTO">
        SELECT
        m.id
        ,m.userId		AS memberId
        ,m.Email        AS memberEmail
        ,m.Surname		AS memberSurname
        ,m.Firstname	AS memberFirstname
        ,m.BirthDate	AS memberBDate
        ,m.RegisterDate	AS memberRegDate
        ,m.RecentVisit	AS memberVisit
        ,m.Gender	    AS memberGender
        ,m.MemberTypeId	AS memberMemberTypeId
        ,m.InstitutionId AS memberInstitutionId
        ,m.MembershipExpirationDate	AS memberMembershipDate
        ,m.Country	    AS memberCountry
        ,m.City	        AS memberCity
        ,m.MajorId	    AS memberMajorId
        ,m.Grade	    AS memberGrade
        ,m.Password	    AS memberPw
        ,m.isReported   AS memberIsReported
        ,m.isBlocked    AS memberIsBlocked
        ,m.isRemoved    AS memberIsRemoved
        ,m.reportedDateTime  AS memberIsReportedDateTime
        ,m.blockedDateTime  AS memberIsBlockedDateTime
        ,m.removedDateTime  AS memberIsRemovedDateTime
        ,m.reportedMemberId AS memberReportedMemberId
        ,m.uuid AS memberUUId
        FROM
        members AS m
        WHERE uuid = #{memberUUId};
    </select>

    <insert id="addMember" parameterType="com.phoenix.qpproject.dto.MembersDTO">
        /* 회원가입 */
        INSERT INTO members
        (	  Email
        , UserId
        , Surname
        , Firstname
        , BirthDate
        , RegisterDate
        , RecentVisit
        , Gender
        , MemberTypeId
        , Password
        , Country
        , City
        , uuid
        )VALUES (
        #{memberEmail}
        , #{memberId}
        , #{memberSurname}
        , #{memberFirstname}
        , #{memberBDate}
        , NOW()
        , NOW()
        , #{memberGender}
        , 1
        , #{memberPw}
        , "대한민국"
        , "서울"
        , #{memberUUId}
        );
    </insert>

    <insert id="addVisitHistory" parameterType="java.lang.Integer">
        INSERT INTO visitHistory
        (	  memberId,
        visitDateTime
        )VALUES (
        #{memberId}
        , NOW()
        );
    </insert>

    <update id="passReset" parameterType="java.lang.String">
        UPDATE members SET Password = #{resetPass} WHERE Email = #{memberEmail};
    </update>

    <update id="memberVerify" parameterType="java.lang.String">
        UPDATE members SET MemberTypeId = 2 WHERE uuid = #{memberUUId};
    </update>

    <update id="memberDeactivateByUserId" parameterType="java.lang.String">
        UPDATE members
        SET isRemoved = true,
        removedDateTime = Now()
        WHERE UserId = #{memberId};
    </update>

    <update id="memberInfoUpdate" parameterType="com.phoenix.qpproject.dto.MembersDTO">
        UPDATE members
        SET
        Surname = #{memberSurname},
        Firstname = #{memberFirstname},
        UserId = #{memberId},
        Gender = #{memberGender},
        BirthDate = #{memberBDate},
        Email = #{memberEmail},
        MemberTypeId = 1,
        InstitutionId = NULL
        WHERE Id = #{Id};
    </update>

    <update id="memberInfoUpdateAdmin" parameterType="com.phoenix.qpproject.dto.MembersDTO">
        UPDATE members
        SET
        MemberTypeId = #{memberMemberTypeId},
        UserId = #{memberId},
        Surname = #{memberSurname},
        Firstname = #{memberFirstname},
        Email = #{memberEmail},
        BirthDate = #{memberBDate}
        WHERE Id = #{Id};
    </update>
</mapper>